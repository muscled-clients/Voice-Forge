apiVersion: v1
kind: ConfigMap
metadata:
  name: voiceforge-config
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: config
data:
  # Application Configuration
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  
  # Server Configuration
  HOST: "0.0.0.0"
  PORT: "8000"
  WORKERS: "4"
  MAX_CONNECTIONS: "1000"
  
  # Database Configuration
  DATABASE_URL: "postgresql://postgres:$(DATABASE_PASSWORD)@voiceforge-postgres:5432/voiceforge"
  DATABASE_POOL_SIZE: "20"
  DATABASE_MAX_OVERFLOW: "30"
  DATABASE_POOL_TIMEOUT: "30"
  DATABASE_POOL_RECYCLE: "3600"
  
  # Redis Configuration
  REDIS_URL: "redis://voiceforge-redis:6379/0"
  REDIS_POOL_SIZE: "20"
  REDIS_SOCKET_TIMEOUT: "30"
  REDIS_SOCKET_CONNECT_TIMEOUT: "30"
  
  # Celery Configuration
  CELERY_BROKER_URL: "redis://voiceforge-redis:6379/1"
  CELERY_RESULT_BACKEND: "redis://voiceforge-redis:6379/2"
  CELERY_TASK_ROUTES: |
    {
      "app.tasks.transcription.transcribe_audio": {"queue": "transcription"},
      "app.tasks.transcription.batch_transcribe": {"queue": "batch"},
      "app.tasks.transcription.cleanup_jobs": {"queue": "cleanup"}
    }
  
  # Model Configuration
  MODEL_CACHE_DIR: "/app/models"
  MODEL_DOWNLOAD_TIMEOUT: "300"
  MAX_MODELS_CACHED: "3"
  DEFAULT_MODEL: "whisper-base"
  
  # Audio Processing
  MAX_AUDIO_DURATION: "3600"
  MAX_AUDIO_SIZE: "104857600"
  SUPPORTED_FORMATS: "wav,mp3,m4a,flac,ogg,webm"
  SAMPLE_RATE: "16000"
  
  # API Limits
  RATE_LIMIT_PER_MINUTE: "100"
  RATE_LIMIT_PER_HOUR: "1000"
  MAX_BATCH_SIZE: "50"
  MAX_CONCURRENT_STREAMS: "10"
  
  # Authentication
  ACCESS_TOKEN_EXPIRE_MINUTES: "30"
  REFRESH_TOKEN_EXPIRE_DAYS: "30"
  
  # Monitoring
  ENABLE_METRICS: "true"
  METRICS_PORT: "9090"
  ENABLE_TRACING: "true"
  JAEGER_ENDPOINT: "http://jaeger-collector.monitoring:14268/api/traces"
  
  # Features
  ENABLE_DIARIZATION: "true"
  ENABLE_LANGUAGE_DETECTION: "true"
  ENABLE_STREAMING: "true"
  ENABLE_BATCH_PROCESSING: "true"
  
  # Storage (if using cloud storage)
  # AWS_S3_BUCKET: "voiceforge-audio-storage"
  # AWS_REGION: "us-west-2"
  
  # Health Check
  HEALTH_CHECK_INTERVAL: "30"
  HEALTH_CHECK_TIMEOUT: "5"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: voiceforge-nginx-config
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;

        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 10240;
        gzip_proxied expired no-cache no-store private must-revalidate auth;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/x-javascript
            application/xml+rss
            application/json;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/s;

        # Upstream backend
        upstream voiceforge_backend {
            least_conn;
            server voiceforge-api-0.voiceforge-api.voiceforge-stt.svc.cluster.local:8000 max_fails=3 fail_timeout=30s;
            server voiceforge-api-1.voiceforge-api.voiceforge-stt.svc.cluster.local:8000 max_fails=3 fail_timeout=30s;
            server voiceforge-api-2.voiceforge-api.voiceforge-stt.svc.cluster.local:8000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }

        server {
            listen 80;
            server_name _;
            client_max_body_size 100M;
            client_body_timeout 60s;
            client_header_timeout 60s;

            # Health check endpoint
            location /health {
                access_log off;
                add_header Content-Type text/plain;
                return 200 "healthy\n";
            }

            # API routes
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://voiceforge_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                proxy_connect_timeout 30s;
                proxy_send_timeout 300s;
                proxy_read_timeout 300s;
                
                proxy_buffering off;
                proxy_request_buffering off;
            }

            # Upload endpoints with higher limits
            location /api/v1/transcribe/ {
                limit_req zone=upload burst=10 nodelay;
                
                proxy_pass http://voiceforge_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                proxy_connect_timeout 60s;
                proxy_send_timeout 600s;
                proxy_read_timeout 600s;
                
                proxy_buffering off;
                proxy_request_buffering off;
            }

            # WebSocket support
            location /api/v1/transcribe/stream {
                proxy_pass http://voiceforge_backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                proxy_connect_timeout 7d;
                proxy_send_timeout 7d;
                proxy_read_timeout 7d;
            }

            # Static files
            location /static/ {
                proxy_pass http://voiceforge_backend;
                proxy_set_header Host $host;
                proxy_cache_valid 200 1d;
                add_header Cache-Control "public, max-age=86400";
            }

            # Docs
            location /docs {
                proxy_pass http://voiceforge_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            location /redoc {
                proxy_pass http://voiceforge_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Default location
            location / {
                proxy_pass http://voiceforge_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }