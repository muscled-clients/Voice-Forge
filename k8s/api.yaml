apiVersion: v1
kind: Service
metadata:
  name: voiceforge-api
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: api
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: api
---
apiVersion: v1
kind: Service
metadata:
  name: voiceforge-api-headless
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: api
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: api
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: voiceforge-models-pvc
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: api
spec:
  accessModes:
  - ReadWriteMany  # Shared across API pods
  resources:
    requests:
      storage: 50Gi
  storageClassName: shared-storage  # NFS or similar shared storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: voiceforge-api
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: api
spec:
  serviceName: voiceforge-api-headless
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: voiceforge
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: voiceforge
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      imagePullSecrets:
      - name: voiceforge-registry-secret
      containers:
      - name: api
        image: voiceforge/stt-api:latest  # Replace with actual image
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        envFrom:
        - configMapRef:
            name: voiceforge-config
        - secretRef:
            name: voiceforge-secrets
        volumeMounts:
        - name: models-storage
          mountPath: /app/models
        - name: temp-storage
          mountPath: /tmp
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1  # Request GPU if available
          limits:
            memory: "8Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12  # Allow 2 minutes for startup
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
      - name: nginx
        image: nginx:1.25-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: nginx
          protocol: TCP
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: nginx-temp
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 101
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: voiceforge-models-pvc
      - name: nginx-config
        configMap:
          name: voiceforge-nginx-config
      - name: temp-storage
        emptyDir:
          sizeLimit: 10Gi
      - name: nginx-temp
        emptyDir:
          sizeLimit: 1Gi
      - name: nginx-run
        emptyDir:
          sizeLimit: 100Mi
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - api
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - gpu-node
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: voiceforge-api-hpa
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: voiceforge-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: transcription_queue_length
      target:
        type: AverageValue
        averageValue: "10"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60