apiVersion: v1
kind: Service
metadata:
  name: voiceforge-postgres
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: database
---
apiVersion: v1
kind: Service
metadata:
  name: voiceforge-postgres-headless
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: database
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: database
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: voiceforge-postgres-pvc
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: database
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd  # Adjust based on your storage class
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: voiceforge-postgres
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: database
spec:
  serviceName: voiceforge-postgres-headless
  replicas: 1  # Use 3 for HA setup with streaming replication
  selector:
    matchLabels:
      app.kubernetes.io/name: voiceforge
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: voiceforge
        app.kubernetes.io/component: database
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: voiceforge-postgres-secret
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: voiceforge-postgres-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: voiceforge-postgres-secret
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_INITDB_ARGS
          value: "--encoding=UTF8 --data-checksums"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
          readOnly: true
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: voiceforge-postgres-pvc
      - name: postgres-config
        configMap:
          name: voiceforge-postgres-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: voiceforge-postgres-config
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: database
data:
  postgresql.conf: |
    # Connection settings
    listen_addresses = '*'
    port = 5432
    max_connections = 200
    superuser_reserved_connections = 3
    
    # Memory settings
    shared_buffers = 1GB
    effective_cache_size = 3GB
    work_mem = 16MB
    maintenance_work_mem = 256MB
    
    # Checkpoint settings
    checkpoint_timeout = 10min
    checkpoint_completion_target = 0.9
    max_wal_size = 2GB
    min_wal_size = 1GB
    
    # Logging settings
    log_destination = 'stderr'
    logging_collector = off
    log_min_messages = warning
    log_min_error_statement = error
    log_min_duration_statement = 1000
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    log_checkpoints = on
    log_connections = on
    log_disconnections = on
    log_lock_waits = on
    log_temp_files = 0
    
    # Performance settings
    random_page_cost = 1.1  # For SSD storage
    effective_io_concurrency = 200  # For SSD storage
    
    # Security settings
    ssl = off  # Enable if using SSL
    password_encryption = scram-sha-256
    
    # Autovacuum settings
    autovacuum = on
    autovacuum_max_workers = 3
    autovacuum_naptime = 30s
    autovacuum_vacuum_threshold = 50
    autovacuum_analyze_threshold = 50
    
    # Archive settings (for backup)
    archive_mode = on
    archive_command = '/bin/true'  # Replace with actual archive command
    
    # Replication settings (for HA)
    wal_level = replica
    max_wal_senders = 3
    max_replication_slots = 3
    hot_standby = on