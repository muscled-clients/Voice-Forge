apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: voiceforge-ingress
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: ingress
  annotations:
    # NGINX Ingress Controller annotations
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-requests-per-second: "10"
    nginx.ingress.kubernetes.io/rate-limit-burst-multiplier: "5"
    
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-max-age: "86400"
    
    # Upload limits
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "1m"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    
    # WebSocket support
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    
    # Certificate management (if using cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: http01
    
    # External DNS (if using external-dns)
    external-dns.alpha.kubernetes.io/hostname: api.voiceforge.ai
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.voiceforge.ai
    - voiceforge.ai
    secretName: voiceforge-tls-cert
  rules:
  - host: api.voiceforge.ai
    http:
      paths:
      # API routes
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: voiceforge-api
            port:
              number: 8000
      
      # WebSocket endpoint
      - path: /api/v1/transcribe/stream
        pathType: Exact
        backend:
          service:
            name: voiceforge-api
            port:
              number: 8000
      
      # Health checks (should be accessible)
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: voiceforge-api
            port:
              number: 8000
      
      # Documentation
      - path: /docs
        pathType: Prefix
        backend:
          service:
            name: voiceforge-api
            port:
              number: 8000
      
      - path: /redoc
        pathType: Prefix
        backend:
          service:
            name: voiceforge-api
            port:
              number: 8000
      
      # Static files and playground
      - path: /static
        pathType: Prefix
        backend:
          service:
            name: voiceforge-api
            port:
              number: 8000
      
      # Root path (redirect to docs or playground)
      - path: /
        pathType: Exact
        backend:
          service:
            name: voiceforge-api
            port:
              number: 8000
  
  - host: voiceforge.ai
    http:
      paths:
      # Redirect to API docs or main website
      - path: /
        pathType: Prefix
        backend:
          service:
            name: voiceforge-api
            port:
              number: 8000
---
# Ingress for monitoring tools (internal access)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: voiceforge-monitoring-ingress
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    
    # Basic auth for monitoring endpoints
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: voiceforge-monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: "VoiceForge Monitoring"
    
    # Restrict to internal IPs only
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - monitoring.voiceforge.internal
    secretName: voiceforge-monitoring-tls
  rules:
  - host: monitoring.voiceforge.internal
    http:
      paths:
      # Flower (Celery monitoring)
      - path: /flower
        pathType: Prefix
        backend:
          service:
            name: voiceforge-flower
            port:
              number: 5555
      
      # Metrics endpoint
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: voiceforge-api
            port:
              number: 9090
---
# Secret for monitoring basic auth
apiVersion: v1
kind: Secret
metadata:
  name: voiceforge-monitoring-auth
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: monitoring
type: Opaque
data:
  # admin:password (htpasswd generated)
  # Generate with: htpasswd -nb admin password | base64
  auth: YWRtaW46JGFwcjEkSDY1dmtjbE8kSmdaNU5TUkhyVEUuLzZjV1k2MVJhMA==
---
# Certificate for Let's Encrypt (if using cert-manager)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: voiceforge-tls-cert
  namespace: voiceforge-stt
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: tls
spec:
  secretName: voiceforge-tls-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - api.voiceforge.ai
  - voiceforge.ai
---
# ClusterIssuer for Let's Encrypt (if using cert-manager)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  labels:
    app.kubernetes.io/name: voiceforge
    app.kubernetes.io/component: tls
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@voiceforge.ai  # Replace with your email
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx